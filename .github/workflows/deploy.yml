name: Deploy

on:
  push:
      branches:
        - workflow_test
  workflow_dispatch:

jobs:
  deploy:
    name: "Deploy to DigitalOcean Droplet VPS"
    runs-on: ubuntu-latest
    #if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >>~/.ssh/config <<END
          Host my-vm
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}
        
      #- name: Deploy site
      #  run: ssh my-vm '~/redeploy-site.sh'
      
      - name: Print container status
        run: ssh my-vm 'cd ${{ secrets.PROJECT_ROOT }} && docker-compose ps'
      
      - name: Send Discord success message
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš€ Deployment Successful ${{ secrets.SITE_URL }}"
  
  test_failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Test fails
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deployment Failed Due to Test Failure"

  deploy_failure:
    runs-on: ubuntu-latest
    if: ${{ always() && needs.deploy.result == 'failure' }}
    steps:
      - name: Deploy process fails
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deployment Failed Due to Unknown Issues"
